{"ast":null,"code":"var _jsxFileName = \"/home/hritik/CodeStorm e tutorial/alt-f4/src/Components/Home.js\";\nimport React, { Component } from 'react';\nimport \"./Homestyle.css\";\nimport firebase from '../Firebase';\nimport NotSignedIn from \"./Nav/NotSignedIn\";\nimport SignedIn from \"./Nav/SignedIn\";\nimport { faThList } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends Component {\n  constructor() {\n    super();\n\n    this.onClickLoginBtn = () => {\n      var provider = new firebase.auth.GoogleAuthProvider();\n      firebase.auth().signInWithPopup(provider).then(result => {\n        // /** @type {firebase.auth.OAuthCredential} */\n        // var credential = result.credential;\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        // var token = credential.accessToken;\n        // The signed-in user info.\n        // var user = result.user;\n        this.setState({ ...this.state,\n          count: true\n        }); // ...\n      }).catch(error => {\n        // Handle Errors here.\n        console.log(error);\n      });\n    };\n\n    this.componentDidMount = () => {\n      firebase.auth().onAuthStateChanged(user => {\n        if (user) {\n          // User is signed in, see docs for a list of available properties\n          // https://firebase.google.com/docs/reference/js/firebase.User\n          var uid = user.uid;\n          console.log(\"User signed\");\n          console.log(user);\n          this.setState({\n            isLogin: true,\n            name: user.displayName,\n            photo: user.photoURL\n          }); // ...\n        } else {\n          // User is signed out\n          // ...\n          console.log(\"user not signed in\");\n        }\n      });\n    };\n\n    this.onLogout = () => {\n      firebase.auth().signOut().then(function () {}).catch(function (error) {});\n      this.setState({\n        isLogin: false,\n        name: \"\",\n        photo: \"\"\n      });\n    };\n\n    this.state = {\n      isLogin: false,\n      name: \"\",\n      photo: \"\",\n      count: false\n    };\n  }\n\n  render() {\n    if (this.state.count == 0 && this.state.isLogin) {\n      setTimeout(() => {\n        this.setState({ ...this.state,\n          count: true\n        });\n      }, 1000);\n      this.setState({ ...this.state,\n        count: false\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"HomeNavbar\",\n      children: [this.state.isLogin == false ? /*#__PURE__*/_jsxDEV(NotSignedIn, {\n        googleLogin: () => this.onClickLoginBtn()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(SignedIn, {\n        LogoutFn: () => this.onLogout(),\n        Name: this.state.name,\n        Photo: this.state.photo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), this.state.count && this.state.isLogin ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome_msg\",\n        children: [\"\\u2605 Welcome \", this.state.name, \" ! \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 47\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/hritik/CodeStorm e tutorial/alt-f4/src/Components/Home.js"],"names":["React","Component","firebase","NotSignedIn","SignedIn","faThList","Home","constructor","onClickLoginBtn","provider","auth","GoogleAuthProvider","signInWithPopup","then","result","setState","state","count","catch","error","console","log","componentDidMount","onAuthStateChanged","user","uid","isLogin","name","displayName","photo","photoURL","onLogout","signOut","render","setTimeout"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAO,iBAAP;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,QAAT,QAAyB,mCAAzB;;;AAGA,MAAMC,IAAN,SAAmBL,SAAnB,CAA4B;AAE1BM,EAAAA,WAAW,GAAE;AACX;;AADW,SAYbC,eAZa,GAYG,MAAI;AAClB,UAAIC,QAAQ,GAAG,IAAIP,QAAQ,CAACQ,IAAT,CAAcC,kBAAlB,EAAf;AAEAT,MAAAA,QAAQ,CAACQ,IAAT,GACCE,eADD,CACiBH,QADjB,EAECI,IAFD,CAEOC,MAAD,IAAY;AAChB;AACA;AAEA;AACA;AACA;AACA;AACA,aAAKC,QAAL,CAAc,EACZ,GAAG,KAAKC,KADI;AACEC,UAAAA,KAAK,EAAC;AADR,SAAd,EARgB,CAWhB;AACD,OAdD,EAcGC,KAdH,CAcUC,KAAD,IAAW;AAClB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,OAjBD;AAkBD,KAjCY;;AAAA,SAmCbG,iBAnCa,GAmCK,MAAI;AACpBpB,MAAAA,QAAQ,CAACQ,IAAT,GAAgBa,kBAAhB,CAAoCC,IAAD,IAAU;AAC3C,YAAIA,IAAJ,EAAU;AACR;AACA;AACA,cAAIC,GAAG,GAAGD,IAAI,CAACC,GAAf;AACAL,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACA,eAAKT,QAAL,CAAc;AACZW,YAAAA,OAAO,EAAC,IADI;AAEZC,YAAAA,IAAI,EAAEH,IAAI,CAACI,WAFC;AAGZC,YAAAA,KAAK,EAAEL,IAAI,CAACM;AAHA,WAAd,EANQ,CAWR;AACD,SAZD,MAYO;AACL;AACA;AACAV,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD;AACF,OAlBD;AAmBD,KAvDY;;AAAA,SAyDbU,QAzDa,GAyDF,MAAI;AACb7B,MAAAA,QAAQ,CAACQ,IAAT,GAAgBsB,OAAhB,GAA0BnB,IAA1B,CAA+B,YAAU,CAExC,CAFD,EAEGK,KAFH,CAES,UAASC,KAAT,EAAe,CAEvB,CAJD;AAKA,WAAKJ,QAAL,CAAc;AACZW,QAAAA,OAAO,EAAC,KADI;AAEZC,QAAAA,IAAI,EAAC,EAFO;AAGZE,QAAAA,KAAK,EAAC;AAHM,OAAd;AAKD,KApEY;;AAEX,SAAKb,KAAL,GAAW;AACTU,MAAAA,OAAO,EAAG,KADD;AAETC,MAAAA,IAAI,EAAG,EAFE;AAGTE,MAAAA,KAAK,EAAE,EAHE;AAITZ,MAAAA,KAAK,EAAC;AAJG,KAAX;AAMD;;AA8DDgB,EAAAA,MAAM,GAAE;AACN,QAAG,KAAKjB,KAAL,CAAWC,KAAX,IAAkB,CAAlB,IAAuB,KAAKD,KAAL,CAAWU,OAArC,EAA6C;AAC3CQ,MAAAA,UAAU,CAAC,MAAI;AACb,aAAKnB,QAAL,CAAc,EACZ,GAAG,KAAKC,KADI;AACEC,UAAAA,KAAK,EAAC;AADR,SAAd;AAID,OALS,EAKR,IALQ,CAAV;AAMA,WAAKF,QAAL,CAAc,EACZ,GAAG,KAAKC,KADI;AACEC,QAAAA,KAAK,EAAC;AADR,OAAd;AAGD;;AACD,wBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,iBACE,KAAKD,KAAL,CAAWU,OAAX,IAAoB,KAApB,gBACA,QAAC,WAAD;AAAa,QAAA,WAAW,EAAE,MAAI,KAAKlB,eAAL;AAA9B;AAAA;AAAA;AAAA;AAAA,cADA,gBAEE,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAE,MAAI,KAAKuB,QAAL,EAAxB;AAAyC,QAAA,IAAI,EAAE,KAAKf,KAAL,CAAWW,IAA1D;AAAgE,QAAA,KAAK,EAAE,KAAKX,KAAL,CAAWa;AAAlF;AAAA;AAAA;AAAA;AAAA,cAHJ,EAIG,KAAKb,KAAL,CAAWC,KAAX,IAAkB,KAAKD,KAAL,CAAWU,OAA7B,gBAAqC;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,sCAA+C,KAAKV,KAAL,CAAWW,IAA1D;AAAA;AAAA;AAAA;AAAA;AAAA,cAArC,GAA8G,IAJjH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AA5FyB;;AA+F5B,eAAerB,IAAf","sourcesContent":["import React,{Component} from 'react';\nimport \"./Homestyle.css\";\nimport firebase from '../Firebase';\nimport NotSignedIn from \"./Nav/NotSignedIn\";\nimport SignedIn from \"./Nav/SignedIn\";\nimport { faThList } from '@fortawesome/free-solid-svg-icons';\n\n\nclass Home extends Component{\n\n  constructor(){\n    super();\n    this.state={\n      isLogin : false ,\n      name : \"\",\n      photo: \"\",\n      count:false,\n    }\n  }\n\n  \n  \n  onClickLoginBtn=()=>{\n    var provider = new firebase.auth.GoogleAuthProvider();\n    \n    firebase.auth()\n    .signInWithPopup(provider)\n    .then((result) => {\n      // /** @type {firebase.auth.OAuthCredential} */\n      // var credential = result.credential;\n      \n      // This gives you a Google Access Token. You can use it to access the Google API.\n      // var token = credential.accessToken;\n      // The signed-in user info.\n      // var user = result.user;\n      this.setState({\n        ...this.state,count:true\n      })\n      // ...\n    }).catch((error) => {\n      // Handle Errors here.\n      console.log(error);\n    });\n  }\n  \n  componentDidMount=()=>{\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        // User is signed in, see docs for a list of available properties\n        // https://firebase.google.com/docs/reference/js/firebase.User\n        var uid = user.uid;\n        console.log(\"User signed\");\n        console.log(user);\n        this.setState({\n          isLogin:true,\n          name: user.displayName,\n          photo: user.photoURL\n        })\n        // ...\n      } else {\n        // User is signed out\n        // ...\n        console.log(\"user not signed in\");\n      }\n    });\n  }\n  \n  onLogout = ()=>{\n    firebase.auth().signOut().then(function(){\n      \n    }).catch(function(error){\n      \n    })\n    this.setState({\n      isLogin:false,\n      name:\"\",\n      photo:\"\"\n    })\n  }\n  \n  render(){\n    if(this.state.count==0 && this.state.isLogin){\n      setTimeout(()=>{\n        this.setState({\n          ...this.state,count:true\n        })\n\n      },1000)\n      this.setState({\n        ...this.state,count:false\n      })\n    }\n    return (\n      <div className=\"HomeNavbar\" >\n      { this.state.isLogin==false?(\n        <NotSignedIn googleLogin={()=>this.onClickLoginBtn()} /> \n        ):<SignedIn LogoutFn={()=>this.onLogout()} Name={this.state.name} Photo={this.state.photo} />}\n        {this.state.count&&this.state.isLogin?<div className=\"welcome_msg\" >&#9733; Welcome {this.state.name} ! </div>:null}\n    </div>\n    )\n  }\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}