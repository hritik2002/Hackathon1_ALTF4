{"ast":null,"code":"var _jsxFileName = \"/home/hritik/CodeStorm e tutorial/alt-f4/src/Components/Comments/Comments.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport firebase from \"@firebase/app-compat\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\nimport \"./Comments.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = props => {\n  _s();\n\n  const [input_value, setInput_value] = useState(\"\");\n  const dummy = useRef();\n  const firestore = firebase.firestore();\n  const [user] = useAuthState(firebase.auth());\n  const messageRef = firestore.collection(\"comments\");\n  const query = messageRef.orderBy('content').limit(25);\n  const [messages] = useCollectionData(query);\n\n  const sendMessage = async e => {\n    e.preventDefault();\n    const {\n      uid,\n      photoURL\n    } = firebase.auth().currentUser;\n    await messageRef.add({\n      content: input_value,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL\n    });\n    setInput_value(\"\");\n  };\n\n  const [clicked, setClicked] = useState([]);\n  let uid;\n  if (user) uid = user.uid;\n\n  const handleDelete = i => {\n    let arr = [...clicked];\n    arr = arr.map((val, index) => i == index ? !arr[index] : false);\n    setClicked(arr);\n  };\n\n  useEffect(() => {\n    if (messages) setClicked(Array(messages.length).fill(false));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input_comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Comments Here...\",\n        value: input_value,\n        onChange: e => setInput_value(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container_of_messages\",\n      children: messages && messages.map((val, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${val.uid === uid ? `sent` : `recieved`}`,\n        onClick: () => handleDelete(i),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: val.photoURL,\n            alt: \"\",\n            title: val.uid == uid ? user.displayName : val.uid\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: val.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: val.replies\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), clicked[i] && uid === val.uid && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"delete\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Delete Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 54\n        }, this)]\n      }, val.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Comments, \"UNRkPN6x2BeOV5efodRsmp6xQ08=\", false, function () {\n  return [useAuthState, useCollectionData];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["/home/hritik/CodeStorm e tutorial/alt-f4/src/Components/Comments/Comments.js"],"names":["React","useState","useEffect","useRef","useAuthState","firebase","useCollectionData","Comments","props","input_value","setInput_value","dummy","firestore","user","auth","messageRef","collection","query","orderBy","limit","messages","sendMessage","e","preventDefault","uid","photoURL","currentUser","add","content","createdAt","FieldValue","serverTimestamp","clicked","setClicked","handleDelete","i","arr","map","val","index","Array","length","fill","target","value","displayName","replies","id"],"mappings":"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","sourcesContent":["import React,{useState,useEffect,useRef} from \"react\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport firebase from \"@firebase/app-compat\";\nimport {useCollectionData} from \"react-firebase-hooks/firestore\" ;\n\nimport \"./Comments.css\"\n\nconst Comments = (props)=>{\n\n    const [input_value , setInput_value] = useState(\"\")\n\n    const dummy = useRef()\n    const firestore = firebase.firestore();\n  \n    const [user] = useAuthState(firebase.auth());\n    const messageRef = firestore.collection(\"comments\")\n    const query = messageRef.orderBy('content').limit(25);\n    const [messages] = useCollectionData(query) ;\n    \n    \n    const sendMessage = async (e)=>{\n      e.preventDefault();\n      const {uid , photoURL} = firebase.auth().currentUser ;\n\n  \n      await messageRef.add({\n        content:input_value,\n        createdAt : firebase.firestore.FieldValue.serverTimestamp(),\n        uid,\n        photoURL\n      })\n      setInput_value(\"\");\n    }\n\n    const [clicked,setClicked] = useState([]) ;\n  \n     let uid ;\n     if(user)\n        uid = user.uid ;\n\n    const handleDelete = (i)=>{\n        let arr = [...clicked] ;\n\n        arr = arr.map((val,index)=> i==index?!arr[index]:false) ;\n        setClicked(arr) ;\n    }\n\n    useEffect(()=>{\n        if(messages)\n            setClicked(Array(messages.length).fill(false))\n    },[])\n\n\n\n    return (\n        <div className=\"wrapper\">\n            <div className=\"input_comment\">\n                <input type=\"text\" placeholder=\"Comments Here...\" value={input_value} onChange={(e)=>setInput_value(e.target.value)} \n                \n                />\n                <button onClick={sendMessage} >Comment</button>\n            </div>\n            <div className=\"container_of_messages\"  >\n            {messages&&messages.map((val,i)=>(\n                <div  className={`message ${val.uid===uid?`sent`:`recieved`}`} onClick={()=>handleDelete(i)} key={val.id} >\n                    <div className=\"left\">\n                        <img src={val.photoURL} alt=\"\" title={val.uid==uid?user.displayName:val.uid} />\n                    </div>\n                    <div className=\"right\">\n                        <p>{val.content}</p>\n                        <p>{val.replies}</p>\n                    </div>\n                    {clicked[i] && uid === val.uid &&<div className=\"delete\">\n                            <button  >Delete Comment</button>\n                        </div>}\n                </div>\n            ))}\n        </div>\n        </div>\n    )\n}\n\nexport default Comments;"]},"metadata":{},"sourceType":"module"}