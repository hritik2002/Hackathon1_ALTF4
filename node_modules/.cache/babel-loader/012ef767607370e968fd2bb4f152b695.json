{"ast":null,"code":"var _jsxFileName = \"/home/hritik/CodeStorm e tutorial/alt-f4/src/Components/Home.js\";\nimport React, { Component } from 'react';\nimport \"./Homestyle.css\";\nimport firebase from '../Firebase';\nimport NotSignedIn from \"./Nav/NotSignedIn\";\nimport SignedIn from \"./Nav/SignedIn\";\nimport { faThList } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends Component {\n  constructor() {\n    super();\n\n    this.onClickLoginBtn = () => {\n      var provider = new firebase.auth.GoogleAuthProvider();\n      firebase.auth().signInWithPopup(provider).then(result => {\n        /** @type {firebase.auth.OAuthCredential} */\n        var credential = result.credential; // This gives you a Google Access Token. You can use it to access the Google API.\n\n        var token = credential.accessToken; // The signed-in user info.\n\n        var user = result.user; // ...\n      }).catch(error => {\n        // Handle Errors here.\n        console.log(error);\n      });\n    };\n\n    this.componentDidMount = () => {\n      firebase.auth().onAuthStateChanged(user => {\n        if (user) {\n          // User is signed in, see docs for a list of available properties\n          // https://firebase.google.com/docs/reference/js/firebase.User\n          var uid = user.uid;\n          console.log(\"User signed\");\n          console.log(user);\n          this.setState({\n            isLogin: true,\n            name: user.displayName,\n            photo: user.photoURL\n          }); // ...\n        } else {\n          // User is signed out\n          // ...\n          console.log(\"user not signed in\");\n        }\n      });\n    };\n\n    this.onLogout = () => {\n      firebase.auth().signOut().then(function () {}).catch(function (error) {});\n      this.setState({\n        isLogin: false,\n        name: \"\",\n        photo: \"\"\n      });\n    };\n\n    this.state = {\n      isLogin: false,\n      name: \"\",\n      photo: \"\",\n      count: 0\n    };\n  }\n\n  render() {\n    if (this.state.count == 0 && this.state.isLogin) {\n      setTimeout(() => {\n        this.setState({ ...state,\n          count: 2\n        });\n      }, 1000);\n      this.setState({ ...state,\n        count: 1\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"HomeNavbar\",\n      children: [this.state.isLogin == false ? /*#__PURE__*/_jsxDEV(NotSignedIn, {\n        googleLogin: () => this.onClickLoginBtn()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(SignedIn, {\n        LogoutFn: () => this.onLogout(),\n        Name: this.state.name,\n        Photo: this.state.photo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome_msg\",\n        children: [\"Welcome \", this.state.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/hritik/CodeStorm e tutorial/alt-f4/src/Components/Home.js"],"names":["React","Component","firebase","NotSignedIn","SignedIn","faThList","Home","constructor","onClickLoginBtn","provider","auth","GoogleAuthProvider","signInWithPopup","then","result","credential","token","accessToken","user","catch","error","console","log","componentDidMount","onAuthStateChanged","uid","setState","isLogin","name","displayName","photo","photoURL","onLogout","signOut","state","count","render","setTimeout"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport \"./Homestyle.css\";\nimport firebase from '../Firebase';\nimport NotSignedIn from \"./Nav/NotSignedIn\";\nimport SignedIn from \"./Nav/SignedIn\";\nimport { faThList } from '@fortawesome/free-solid-svg-icons';\n\n\nclass Home extends Component{\n\n  constructor(){\n    super();\n    this.state={\n      isLogin : false ,\n      name : \"\",\n      photo: \"\",\n      count:0,\n    }\n  }\n\n  \n  \n  onClickLoginBtn=()=>{\n    var provider = new firebase.auth.GoogleAuthProvider();\n    \n    firebase.auth()\n    .signInWithPopup(provider)\n    .then((result) => {\n      /** @type {firebase.auth.OAuthCredential} */\n      var credential = result.credential;\n      \n      // This gives you a Google Access Token. You can use it to access the Google API.\n      var token = credential.accessToken;\n      // The signed-in user info.\n      var user = result.user;\n      // ...\n    }).catch((error) => {\n      // Handle Errors here.\n      console.log(error);\n    });\n  }\n  \n  componentDidMount=()=>{\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        // User is signed in, see docs for a list of available properties\n        // https://firebase.google.com/docs/reference/js/firebase.User\n        var uid = user.uid;\n        console.log(\"User signed\");\n        console.log(user);\n        this.setState({\n          isLogin:true,\n          name: user.displayName,\n          photo: user.photoURL\n        })\n        // ...\n      } else {\n        // User is signed out\n        // ...\n        console.log(\"user not signed in\");\n      }\n    });\n  }\n  \n  onLogout = ()=>{\n    firebase.auth().signOut().then(function(){\n      \n    }).catch(function(error){\n      \n    })\n    this.setState({\n      isLogin:false,\n      name:\"\",\n      photo:\"\"\n    })\n  }\n  \n  render(){\n    if(this.state.count==0 && this.state.isLogin){\n      setTimeout(()=>{\n        this.setState({\n          ...state,count:2\n        })\n\n      },1000)\n      this.setState({\n        ...state,count:1\n      })\n    }\n    return (\n      <div className=\"HomeNavbar\" >\n      { this.state.isLogin==false?(\n        <NotSignedIn googleLogin={()=>this.onClickLoginBtn()} /> \n        ):<SignedIn LogoutFn={()=>this.onLogout()} Name={this.state.name} Photo={this.state.photo} />}\n        <div className=\"welcome_msg\" >Welcome {this.state.name}</div>\n    </div>\n    )\n  }\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}