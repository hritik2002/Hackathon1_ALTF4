{"ast":null,"code":"var _jsxFileName = \"/home/hritik/CodeStorm e tutorial/alt-f4/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport EditorFinal from \"./Components/Editor/EditorFinal\";\nimport Projects from \"./Components/Projects/Projects\";\nimport Roadmap from \"./Components/Roadmap/Roadmap\";\nimport Home from './Components/Home';\nimport firebase from './Firebase'; // function App() {\n//   return (\n// <main>\n//   <BrowserRouter>\n//     <Switch>\n//         <Route path=\"/\" component={Home} exact />\n//         <Route path=\"/EditorFinal\" component={EditorFinal} />\n//         <Route path=\"/Projects\" component={Projects} />\n//         <Route path=\"/Roadmap\" component={Roadmap} />\n//     </Switch>\n//     </BrowserRouter>\n// </main>\n// )\n// }\n// export default App;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.onSubmit = () => {\n      var provider = new firebase.auth.GoogleAuthProvider();\n      firebase.auth().signInWithPopup(provider).then(result => {\n        /** @type {firebase.auth.OAuthCredential} */\n        var credential = result.credential; // This gives you a Google Access Token. You can use it to access the Google API.\n\n        var token = credential.accessToken; // The signed-in user info.\n\n        var user = result.user; // ...\n      }).catch(error => {\n        // Handle Errors here.\n        console.log(error);\n      });\n      console.log(\"success\");\n    };\n\n    this.componentDidMount = () => {\n      firebase.auth().onAuthStateChanged(user => {\n        if (user) {\n          // User is signed in, see docs for a list of available properties\n          // https://firebase.google.com/docs/reference/js/firebase.User\n          var uid = user.uid;\n          console.log(\"User signed\");\n          console.log(user);\n          this.setState({\n            isLogin: true,\n            name: user.displayName,\n            photo: user.photoURL\n          }); // ...\n        } else {\n          // User is signed out\n          // ...\n          console.log(\"user not signed in\");\n        }\n      });\n    };\n\n    this.onLogout = () => {\n      firebase.auth().signOut().then(function () {}).catch(function (error) {});\n      this.setState({\n        isLogin: false,\n        name: \"\",\n        photo: \"\"\n      });\n    };\n\n    this.state = {\n      isLogin: false,\n      name: \"\",\n      photo: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        width: \"100%\",\n        height: \"100vh\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/hritik/CodeStorm e tutorial/alt-f4/src/App.js"],"names":["React","Component","BrowserRouter","Route","Switch","EditorFinal","Projects","Roadmap","Home","firebase","App","constructor","onSubmit","provider","auth","GoogleAuthProvider","signInWithPopup","then","result","credential","token","accessToken","user","catch","error","console","log","componentDidMount","onAuthStateChanged","uid","setState","isLogin","name","displayName","photo","photoURL","onLogout","signOut","state","render","display","width","height","justifyContent","alignItems","flexDirection"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,QAA6C,kBAA7C;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CAGA;AAEA;AACI;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACJ;AACA;AAEA;;;;AAGA,MAAMC,GAAN,SAAkBT,SAAlB,CAA2B;AAEzBU,EAAAA,WAAW,GAAE;AACX;;AADW,SAUbC,QAVa,GAUJ,MAAI;AACX,UAAIC,QAAQ,GAAG,IAAIJ,QAAQ,CAACK,IAAT,CAAcC,kBAAlB,EAAf;AAEAN,MAAAA,QAAQ,CAACK,IAAT,GACDE,eADC,CACeH,QADf,EAEDI,IAFC,CAEKC,MAAD,IAAY;AAChB;AACA,YAAIC,UAAU,GAAGD,MAAM,CAACC,UAAxB,CAFgB,CAIhB;;AACA,YAAIC,KAAK,GAAGD,UAAU,CAACE,WAAvB,CALgB,CAMhB;;AACA,YAAIC,IAAI,GAAGJ,MAAM,CAACI,IAAlB,CAPgB,CAQhB;AACC,OAXD,EAWGC,KAXH,CAWUC,KAAD,IAAW;AAClB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,OAdD;AAeAC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,KA7BY;;AAAA,SA+BbC,iBA/Ba,GA+BK,MAAI;AACpBlB,MAAAA,QAAQ,CAACK,IAAT,GAAgBc,kBAAhB,CAAoCN,IAAD,IAAU;AAC3C,YAAIA,IAAJ,EAAU;AACR;AACA;AACA,cAAIO,GAAG,GAAGP,IAAI,CAACO,GAAf;AACAJ,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,eAAKQ,QAAL,CAAc;AACZC,YAAAA,OAAO,EAAC,IADI;AAEZC,YAAAA,IAAI,EAAEV,IAAI,CAACW,WAFC;AAGZC,YAAAA,KAAK,EAAEZ,IAAI,CAACa;AAHA,WAAd,EANQ,CAWR;AACD,SAZD,MAYO;AACL;AACA;AACAV,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD;AACF,OAlBD;AAmBD,KAnDY;;AAAA,SAqDbU,QArDa,GAqDF,MAAI;AACb3B,MAAAA,QAAQ,CAACK,IAAT,GAAgBuB,OAAhB,GAA0BpB,IAA1B,CAA+B,YAAU,CAExC,CAFD,EAEGM,KAFH,CAES,UAASC,KAAT,EAAe,CAEvB,CAJD;AAKA,WAAKM,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAC,KADI;AAEZC,QAAAA,IAAI,EAAC,EAFO;AAGZE,QAAAA,KAAK,EAAC;AAHM,OAAd;AAKD,KAhEY;;AAEX,SAAKI,KAAL,GAAW;AACTP,MAAAA,OAAO,EAAG,KADD;AAETC,MAAAA,IAAI,EAAG,EAFE;AAGTE,MAAAA,KAAK,EAAE;AAHE,KAAX;AAKD;;AA2DDK,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAC,MAAT;AAAgBC,QAAAA,KAAK,EAAC,MAAtB;AAA6BC,QAAAA,MAAM,EAAC,OAApC;AAA4CC,QAAAA,cAAc,EAAC,QAA3D;AAAoEC,QAAAA,UAAU,EAAC,QAA/E;AACVC,QAAAA,aAAa,EAAC;AADJ;AAAZ;AAAA;AAAA;AAAA;AAAA,YADF;AAoBD;;AAzFwB;;AA4F3B,eAAenC,GAAf","sourcesContent":["import React,{Component} from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport EditorFinal from \"./Components/Editor/EditorFinal\";\nimport Projects from \"./Components/Projects/Projects\";\nimport Roadmap from \"./Components/Roadmap/Roadmap\";\nimport Home from './Components/Home'\nimport firebase from './Firebase';\n\n\n// function App() {\n\n//   return (\n    // <main>\n    //   <BrowserRouter>\n\n    //     <Switch>\n    //         <Route path=\"/\" component={Home} exact />\n    //         <Route path=\"/EditorFinal\" component={EditorFinal} />\n    //         <Route path=\"/Projects\" component={Projects} />\n    //         <Route path=\"/Roadmap\" component={Roadmap} />\n    //     </Switch>\n    //     </BrowserRouter>\n\n    // </main>\n// )\n// }\n\n// export default App;\n\n\nclass App extends Component{\n\n  constructor(){\n    super();\n    this.state={\n      isLogin : false ,\n      name : \"\",\n      photo: \"\"\n    }\n  }\n\n\n  onSubmit=()=>{\n    var provider = new firebase.auth.GoogleAuthProvider();\n\n    firebase.auth()\n  .signInWithPopup(provider)\n  .then((result) => {\n    /** @type {firebase.auth.OAuthCredential} */\n    var credential = result.credential;\n\n    // This gives you a Google Access Token. You can use it to access the Google API.\n    var token = credential.accessToken;\n    // The signed-in user info.\n    var user = result.user;\n    // ...\n    }).catch((error) => {\n      // Handle Errors here.\n      console.log(error);\n    });\n    console.log(\"success\")\n  }\n\n  componentDidMount=()=>{\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        // User is signed in, see docs for a list of available properties\n        // https://firebase.google.com/docs/reference/js/firebase.User\n        var uid = user.uid;\n        console.log(\"User signed\");\n        console.log(user);\n        this.setState({\n          isLogin:true,\n          name: user.displayName,\n          photo: user.photoURL\n        })\n        // ...\n      } else {\n        // User is signed out\n        // ...\n        console.log(\"user not signed in\");\n      }\n    });\n  }\n\n  onLogout = ()=>{\n    firebase.auth().signOut().then(function(){\n\n    }).catch(function(error){\n\n    })\n    this.setState({\n      isLogin:false,\n      name:\"\",\n      photo:\"\"\n    })\n  }\n\n  render(){\n    return (\n      <div style={{display:'flex',width:\"100%\",height:\"100vh\",justifyContent:\"center\",alignItems:\"center\",\n        flexDirection:\"column\"\n      }} >\n        {/* <h2>Google Authentication</h2>\n        <button\n          type=\"button\"\n          onClick={this.onSubmit}\n        >Login with Google</button>\n        {this.state.isLogin&&(\n          <div>\n            User name : {this.state.name} \n            <img src={this.state.photo} alt=\"\" />\n            <button\n              onClick={this.onLogout}\n            >Log out</button>\n          </div>\n        )} */}\n      </div>\n    )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}