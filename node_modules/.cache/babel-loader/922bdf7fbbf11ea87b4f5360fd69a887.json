{"ast":null,"code":"var _jsxFileName = \"/home/hritik/CodeStorm e tutorial/etutorial/src/Components/Editor/Editor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material.css';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/xml/xml';\nimport 'codemirror/mode/css/css';\nimport { Controlled as ControlledEditor } from 'react-codemirror2';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCompressAlt, faExpandAlt } from '@for';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Editor = props => {\n  _s();\n\n  const {\n    language,\n    displayName,\n    value,\n    onChange\n  } = props;\n  const [open, setOpen] = useState(true);\n\n  function handleChange(editor, data, value) {\n    onChange(value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `editor-container ${open ? '' : 'collapsed'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-title\",\n      children: [displayName, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setOpen(prev => !prev),\n        children: \"O/C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ControlledEditor, {\n      onBeforeChange: handleChange,\n      value: value,\n      className: \"code-mirror-wrapper\",\n      options: {\n        lineWrapping: true,\n        lint: true,\n        mode: language,\n        lineNumbers: true,\n        theme: 'material'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Editor, \"7kBuOtAKZ3wue69IP/JRHmyxz80=\");\n\n_c = Editor;\nexport default Editor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"sources":["/home/hritik/CodeStorm e tutorial/etutorial/src/Components/Editor/Editor.js"],"names":["React","useState","Controlled","ControlledEditor","FontAwesomeIcon","faCompressAlt","faExpandAlt","Editor","props","language","displayName","value","onChange","open","setOpen","handleChange","editor","data","prev","lineWrapping","lint","mode","lineNumbers","theme"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAO,+BAAP;AACA,OAAO,+BAAP;AACA,OAAO,uCAAP;AACA,OAAO,yBAAP;AACA,OAAO,yBAAP;AACA,SAAQC,UAAU,IAAIC,gBAAtB,QAA+C,mBAA/C;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAAQC,aAAR,EAAwBC,WAAxB,QAA0C,MAA1C;;;AACA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAK;AACHC,IAAAA,QADG;AAEHC,IAAAA,WAFG;AAGHC,IAAAA,KAHG;AAIHC,IAAAA;AAJG,MAKDJ,KALJ;AAOA,QAAM,CAACK,IAAD,EAAMC,OAAN,IAAiBb,QAAQ,CAAC,IAAD,CAA/B;;AAEA,WAASc,YAAT,CAAsBC,MAAtB,EAA6BC,IAA7B,EAAkCN,KAAlC,EAAwC;AACtCC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAG,oBAAmBE,IAAI,GAAE,EAAF,GAAO,WAAY,EAA3D;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,iBACGH,WADH,eAEE;AACE,QAAA,OAAO,EAAE,MAAII,OAAO,CAACI,IAAI,IAAE,CAACA,IAAR,CADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,gBAAD;AACE,MAAA,cAAc,EAAEH,YADlB;AAEE,MAAA,KAAK,EAAEJ,KAFT;AAGE,MAAA,SAAS,EAAC,qBAHZ;AAIE,MAAA,OAAO,EAAE;AACPQ,QAAAA,YAAY,EAAC,IADN;AAEPC,QAAAA,IAAI,EAAC,IAFE;AAGPC,QAAAA,IAAI,EAACZ,QAHE;AAIPa,QAAAA,WAAW,EAAC,IAJL;AAKPC,QAAAA,KAAK,EAAC;AALC;AAJX;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CApCD;;GAAMhB,M;;KAAAA,M;AAsCN,eAAeA,MAAf","sourcesContent":["import React,{useState} from \"react\";\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/material.css'\nimport 'codemirror/mode/javascript/javascript'\nimport 'codemirror/mode/xml/xml'\nimport 'codemirror/mode/css/css'\nimport {Controlled as ControlledEditor}   from 'react-codemirror2';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {faCompressAlt , faExpandAlt} from '@for'\nconst Editor = (props) => {\n  const{\n    language,\n    displayName,\n    value,\n    onChange\n  } = props\n\n  const [open,setOpen] = useState(true);  \n\n  function handleChange(editor,data,value){\n    onChange(value);\n  }\n  \n  return (\n    <div className={`editor-container ${open? '' : 'collapsed'}`} >\n      <div className=\"editor-title\">\n        {displayName}\n        <button\n          onClick={()=>setOpen(prev=>!prev)}\n        >O/C</button>\n      </div>\n      <ControlledEditor \n        onBeforeChange={handleChange}\n        value={value}\n        className=\"code-mirror-wrapper\"\n        options={{\n          lineWrapping:true,\n          lint:true,\n          mode:language,\n          lineNumbers:true,\n          theme:'material'\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Editor;\n"]},"metadata":{},"sourceType":"module"}