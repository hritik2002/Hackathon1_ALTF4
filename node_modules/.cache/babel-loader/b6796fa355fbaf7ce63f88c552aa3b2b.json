{"ast":null,"code":"var _jsxFileName = \"/home/hritik/CodeStorm e tutorial/alt-f4/src/Components/Home.js\";\nimport React, { Component } from 'react';\nimport \"./Homestyle.css\";\nimport firebase from '../Firebase';\nimport NotSignedIn from \"./Nav/NotSignedIn\";\nimport SignedIn from \"./Nav/SignedIn\"; // const Home = (props) => {\n//   const [isLogin,setIsLogin] = useState(true);\n//   return (\n//     <div>\n//      { isLogin==false?(\n//         <NotSignedIn /> \n//       ):<SignedIn />}\n//     </div>\n//   );\n// };\n// export default Home;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends Component {\n  constructor() {\n    super();\n\n    this.onSubmit = () => {\n      var provider = new firebase.auth.GoogleAuthProvider();\n      firebase.auth().signInWithPopup(provider).then(result => {\n        /** @type {firebase.auth.OAuthCredential} */\n        var credential = result.credential; // This gives you a Google Access Token. You can use it to access the Google API.\n\n        var token = credential.accessToken; // The signed-in user info.\n\n        var user = result.user; // ...\n      }).catch(error => {\n        // Handle Errors here.\n        console.log(error);\n      });\n      console.log(\"success\");\n    };\n\n    this.componentDidMount = () => {\n      firebase.auth().onAuthStateChanged(user => {\n        if (user) {\n          // User is signed in, see docs for a list of available properties\n          // https://firebase.google.com/docs/reference/js/firebase.User\n          var uid = user.uid;\n          console.log(\"User signed\");\n          console.log(user);\n          this.setState({\n            isLogin: true,\n            name: user.displayName,\n            photo: user.photoURL\n          }); // ...\n        } else {\n          // User is signed out\n          // ...\n          console.log(\"user not signed in\");\n        }\n      });\n    };\n\n    this.onLogout = () => {\n      firebase.auth().signOut().then(function () {}).catch(function (error) {});\n      this.setState({\n        isLogin: false,\n        name: \"\",\n        photo: \"\"\n      });\n    };\n\n    this.state = {\n      isLogin: false,\n      name: \"\",\n      photo: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        width: \"100%\",\n        height: \"100vh\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Google Authentication\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: this.onSubmit,\n        children: \"Login with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), this.state.isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"User name : \", this.state.name, /*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.state.photo,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.onLogout,\n          children: \"Log out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/hritik/CodeStorm e tutorial/alt-f4/src/Components/Home.js"],"names":["React","Component","firebase","NotSignedIn","SignedIn","Home","constructor","onSubmit","provider","auth","GoogleAuthProvider","signInWithPopup","then","result","credential","token","accessToken","user","catch","error","console","log","componentDidMount","onAuthStateChanged","uid","setState","isLogin","name","displayName","photo","photoURL","onLogout","signOut","state","render","display","width","height","justifyContent","alignItems","flexDirection"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport \"./Homestyle.css\";\nimport firebase from '../Firebase';\nimport NotSignedIn from \"./Nav/NotSignedIn\";\nimport SignedIn from \"./Nav/SignedIn\";\n\n// const Home = (props) => {\n//   const [isLogin,setIsLogin] = useState(true);\n//   return (\n//     <div>\n//      { isLogin==false?(\n//         <NotSignedIn /> \n//       ):<SignedIn />}\n//     </div>\n//   );\n// };\n\n// export default Home;\n\n\n\nclass Home extends Component{\n\n  constructor(){\n    super();\n    this.state={\n      isLogin : false ,\n      name : \"\",\n      photo: \"\"\n    }\n  }\n\n\n  onSubmit=()=>{\n    var provider = new firebase.auth.GoogleAuthProvider();\n\n    firebase.auth()\n  .signInWithPopup(provider)\n  .then((result) => {\n    /** @type {firebase.auth.OAuthCredential} */\n    var credential = result.credential;\n\n    // This gives you a Google Access Token. You can use it to access the Google API.\n    var token = credential.accessToken;\n    // The signed-in user info.\n    var user = result.user;\n    // ...\n    }).catch((error) => {\n      // Handle Errors here.\n      console.log(error);\n    });\n    console.log(\"success\")\n  }\n\n  componentDidMount=()=>{\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        // User is signed in, see docs for a list of available properties\n        // https://firebase.google.com/docs/reference/js/firebase.User\n        var uid = user.uid;\n        console.log(\"User signed\");\n        console.log(user);\n        this.setState({\n          isLogin:true,\n          name: user.displayName,\n          photo: user.photoURL\n        })\n        // ...\n      } else {\n        // User is signed out\n        // ...\n        console.log(\"user not signed in\");\n      }\n    });\n  }\n\n  onLogout = ()=>{\n    firebase.auth().signOut().then(function(){\n\n    }).catch(function(error){\n\n    })\n    this.setState({\n      isLogin:false,\n      name:\"\",\n      photo:\"\"\n    })\n  }\n\n  render(){\n    return (\n      <div style={{display:'flex',width:\"100%\",height:\"100vh\",justifyContent:\"center\",alignItems:\"center\",\n        flexDirection:\"column\"\n      }} >\n        <h2>Google Authentication</h2>\n        <button\n          type=\"button\"\n          onClick={this.onSubmit}\n        >Login with Google</button>\n        {this.state.isLogin&&(\n          <div>\n            User name : {this.state.name} \n            <img src={this.state.photo} alt=\"\" />\n            <button\n              onClick={this.onLogout}\n            >Log out</button>\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}