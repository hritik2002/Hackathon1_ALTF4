{"ast":null,"code":"import _slicedToArray from\"/home/hritik/CodeStorm e tutorial/alt-f4/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import'codemirror/lib/codemirror.css';import'codemirror/theme/material.css';import'codemirror/mode/javascript/javascript';import'codemirror/mode/xml/xml';import'codemirror/mode/css/css';import'./EditorFinal.css';import Chatbot from\"../Chatbot/Chatbot\";import{Controlled as ControlledEditor}from'react-codemirror2';import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{faCompressAlt,faExpandAlt}from'@fortawesome/free-solid-svg-icons';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Editor=function Editor(props){var language=props.language,displayName=props.displayName,value=props.value,onChange=props.onChange;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];function handleChange(editor,data,value){onChange(value);}return/*#__PURE__*/_jsxs(\"div\",{className:\"Main_Editor_container  \".concat(open?'':'collapsed'),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"Main_Editor_title\",children:[displayName,/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return setOpen(function(prev){return!prev;});},type:\"button\",className:\"expand-collapse-btn\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:open?faCompressAlt:faExpandAlt,className:\"icon\"})})]}),/*#__PURE__*/_jsx(ControlledEditor,{onBeforeChange:handleChange,value:value,className:\"code-mirror-wrapper\",options:{lineWrapping:true,lint:true,mode:language,lineNumbers:true,theme:'material'}})]});};export default Editor;","map":{"version":3,"sources":["/home/hritik/CodeStorm e tutorial/alt-f4/src/Components/Editor/Editor.js"],"names":["React","useState","Chatbot","Controlled","ControlledEditor","FontAwesomeIcon","faCompressAlt","faExpandAlt","Editor","props","language","displayName","value","onChange","open","setOpen","handleChange","editor","data","prev","lineWrapping","lint","mode","lineNumbers","theme"],"mappings":"2HAAA,MAAOA,CAAAA,KAAP,EAAcC,QAAd,KAA6B,OAA7B,CACA,MAAO,+BAAP,CACA,MAAO,+BAAP,CACA,MAAO,uCAAP,CACA,MAAO,yBAAP,CACA,MAAO,yBAAP,CACA,MAAO,mBAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,CACA,OAAQC,UAAU,GAAIC,CAAAA,gBAAtB,KAA+C,mBAA/C,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OAAQC,aAAR,CAAwBC,WAAxB,KAA0C,mCAA1C,C,wFACA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,KAAD,CAAW,CACxB,GACEC,CAAAA,QADF,CAKID,KALJ,CACEC,QADF,CAEEC,WAFF,CAKIF,KALJ,CAEEE,WAFF,CAGEC,KAHF,CAKIH,KALJ,CAGEG,KAHF,CAIEC,QAJF,CAKIJ,KALJ,CAIEI,QAJF,CAOA,cAAuBZ,QAAQ,CAAC,IAAD,CAA/B,wCAAOa,IAAP,eAAYC,OAAZ,eAEA,QAASC,CAAAA,YAAT,CAAsBC,MAAtB,CAA6BC,IAA7B,CAAkCN,KAAlC,CAAwC,CACtCC,QAAQ,CAACD,KAAD,CAAR,CACD,CAED,mBACI,aAAK,SAAS,kCAA4BE,IAAI,CAAE,EAAF,CAAO,WAAvC,CAAd,wBACA,aAAK,SAAS,CAAC,mBAAf,WACGH,WADH,cAEE,eACE,OAAO,CAAE,yBAAII,CAAAA,OAAO,CAAC,SAAAI,IAAI,QAAE,CAACA,IAAH,EAAL,CAAX,EADX,CAEE,IAAI,CAAC,QAFP,CAGE,SAAS,CAAC,qBAHZ,uBAKE,KAAC,eAAD,EAAkB,IAAI,CAAEL,IAAI,CAACR,aAAD,CAAeC,WAA3C,CAAwD,SAAS,CAAC,MAAlE,EALF,EAFF,GADA,cAWA,KAAC,gBAAD,EACE,cAAc,CAAES,YADlB,CAEE,KAAK,CAAEJ,KAFT,CAGE,SAAS,CAAC,qBAHZ,CAIE,OAAO,CAAE,CACPQ,YAAY,CAAC,IADN,CAEPC,IAAI,CAAC,IAFE,CAGPC,IAAI,CAACZ,QAHE,CAIPa,WAAW,CAAC,IAJL,CAKPC,KAAK,CAAC,UALC,CAJX,EAXA,GADJ,CA2BD,CAzCD,CA2CA,cAAehB,CAAAA,MAAf","sourcesContent":["import React,{useState} from \"react\";\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/material.css'\nimport 'codemirror/mode/javascript/javascript'\nimport 'codemirror/mode/xml/xml'\nimport 'codemirror/mode/css/css'\nimport './EditorFinal.css'\nimport Chatbot from \"../Chatbot/Chatbot\";\nimport {Controlled as ControlledEditor}   from 'react-codemirror2';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {faCompressAlt , faExpandAlt} from '@fortawesome/free-solid-svg-icons'\nconst Editor = (props) => {\n  const{\n    language,\n    displayName,\n    value,\n    onChange\n  } = props\n\n  const [open,setOpen] = useState(true);  \n\n  function handleChange(editor,data,value){\n    onChange(value);\n  }\n  \n  return (\n      <div className={`Main_Editor_container  ${open? '' : 'collapsed'}`} >\n      <div className=\"Main_Editor_title\">\n        {displayName}\n        <button\n          onClick={()=>setOpen(prev=>!prev)}\n          type=\"button\"\n          className=\"expand-collapse-btn\"\n        >\n          <FontAwesomeIcon  icon={open?faCompressAlt:faExpandAlt} className=\"icon\" />\n        </button>\n      </div>\n      <ControlledEditor \n        onBeforeChange={handleChange}\n        value={value}\n        className=\"code-mirror-wrapper\"\n        options={{\n          lineWrapping:true,\n          lint:true,\n          mode:language,\n          lineNumbers:true,\n          theme:'material',\n        }}\n        \n      />\n    </div>\n  );\n};\n\nexport default Editor;\n"]},"metadata":{},"sourceType":"module"}